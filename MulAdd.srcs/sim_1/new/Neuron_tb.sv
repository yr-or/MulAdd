`timescale 1ns / 1ps

module Neuron_tb();

localparam signed [7:0] B_ARRAY_L2 [0:31] = '{ 16, 30, 0, -6, 11, -2, 7, 13, -8, 6, -8, 17, -8, 16, 4, 14, 5, 11, -11, 8, 21, 1, 37, -12, 13, 3, 19, 24, -5, -1, 16, 22 };
localparam signed [7:0] W_ARRAY_L2 [0:195] = '{ 4, 11, 1, -24, -15, -38, -44, -5, -25, -39, -30, -21, -10, 9, 10, 29, -9, -18, -35, -56, -23, 13, 29, 0, -7, 1, -3, -18, -7, 30, 29, 33, 22, 12, 37, 29, 35, 26, 30, 25, 27, -6, 31, 23, 47, 23, 12, -2, -7, -13, 6, 15, 31, 5, -7, 19, -23, 18, 2, 7, -15, -30, -10, -5, 4, 16, -10, -45, -50, 29, 3, 12, 4, -16, -20, 2, 33, 33, 11, -7, -75, -118, -63, 30, 18, 14, -14, -17, -9, 5, 20, 21, 9, -12, -37, -61, -35, -7, 27, 17, 6, -3, 5, -25, -20, 30, 0, -20, 3, 17, 19, 40, 27, 28, 15, -5, -12, -61, -4, 33, -20, 5, 23, 21, 30, 0, -37, 53, 25, 7, -4, -31, -1, 36, 19, 5, 17, 16, 22, 16, -1, -1, -14, 7, 6, -11, -15, 22, 32, 23, 8, 7, 6, -5, -1, 13, 14, -5, -16, 2, -7, 21, 15, 28, 19, -33, -21, 34, -1, 10, -25, -3, 17, 2, -4, -21, -35, 10, -12, -9, 16, 13, 8, -16, -8, -26, -37, -55, -87, -89, -60, -39, -62, -47, 0, -9 };
logic signed [7:0] test_data_a [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 115, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 42, 123, 118, 103, 55, 0, 0, 0, 0, 0, 0, 0, 0, 57, 127, 101, 123, 52, 106, 0, 0, 0, 0, 0, 0, 0, 31, 122, 91, 11, 18, 0, 125, 27, 0, 0, 0, 0, 0, 8, 117, 47, 6, 0, 0, 0, 127, 49, 0, 0, 0, 0, 0, 65, 101, 0, 0, 0, 0, 0, 127, 43, 0, 0, 0, 0, 0, 84, 60, 0, 0, 0, 1, 66, 92, 2, 0, 0, 0, 0, 0, 85, 46, 0, 0, 14, 88, 74, 0, 0, 0, 0, 0, 0, 0, 84, 113, 65, 96, 116, 65, 7, 0, 0, 0, 0, 0, 0, 0, 32, 111, 127, 83, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
logic signed [7:0] test_data_c [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 126, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 99, 102, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 125, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 121, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 104, 108, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 126, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 99, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 127, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

    logic signed [7:0] data_in_chunk_tb [0:13][0:13];
    logic signed [7:0] weights_chunk_tb [0:13][0:13];
    logic signed [31:0] result_tb;
    reg clk_tb = 1'b0;
    reg reset_tb = 1'b0;
    
    // Instantiate dut
    Neuron_seq dut(
        .clk         (clk_tb),
        .reset       (reset_tb),
        .data_in     (data_in_chunk_tb),
        .weights     (weights_chunk_tb),
        .result      (result_tb)
    );
    
    initial begin
        reset_tb = 1'b1;
        // Input test data
        data_in_chunk_tb[0] = test_data_c[0:13];
        data_in_chunk_tb[1] = test_data_c[14:27];
        data_in_chunk_tb[2] = test_data_c[28:41];
        data_in_chunk_tb[3] = test_data_c[42:55];
        data_in_chunk_tb[4] = test_data_c[56:69];
        data_in_chunk_tb[5] = test_data_c[70:83];
        data_in_chunk_tb[6] = test_data_c[84:97];
        data_in_chunk_tb[7] = test_data_c[98:111];
        data_in_chunk_tb[8] = test_data_c[112:125];
        data_in_chunk_tb[9] = test_data_c[126:139];
        data_in_chunk_tb[10] = test_data_c[140:153];
        data_in_chunk_tb[11] = test_data_c[154:167];
        data_in_chunk_tb[12] = test_data_c[168:181];
        data_in_chunk_tb[13] = test_data_c[182:195];
        // Weights
        weights_chunk_tb[0] = W_ARRAY_L2[0:13];
        weights_chunk_tb[1] = W_ARRAY_L2[14:27];
        weights_chunk_tb[2] = W_ARRAY_L2[28:41];
        weights_chunk_tb[3] = W_ARRAY_L2[42:55];
        weights_chunk_tb[4] = W_ARRAY_L2[56:69];
        weights_chunk_tb[5] = W_ARRAY_L2[70:83];
        weights_chunk_tb[6] = W_ARRAY_L2[84:97];
        weights_chunk_tb[7] = W_ARRAY_L2[98:111];
        weights_chunk_tb[8] = W_ARRAY_L2[112:125];
        weights_chunk_tb[9] = W_ARRAY_L2[126:139];
        weights_chunk_tb[10] = W_ARRAY_L2[140:153];
        weights_chunk_tb[11] = W_ARRAY_L2[154:167];
        weights_chunk_tb[12] = W_ARRAY_L2[168:181];
        weights_chunk_tb[13] = W_ARRAY_L2[182:195];
        #60;
        reset_tb = 1'b0;
        #200;
        
    end

always begin
    clk_tb = ~clk_tb;
    #10;
end

endmodule
