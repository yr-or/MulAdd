
module ImageSelect(
    input [3:0] image_no,
    output reg signed [7:0] image_data_out [0:195]
    );

    // Image data - memory
    // Zero
    reg signed [7:0] test_data_zero [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 115, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 42, 123, 118, 103, 55, 0, 0, 0, 0, 0, 0, 0, 0, 57, 127, 101, 123, 52, 106, 0, 0, 0, 0, 0, 0, 0, 31, 122, 91, 11, 18, 0, 125, 27, 0, 0, 0, 0, 0, 8, 117, 47, 6, 0, 0, 0, 127, 49, 0, 0, 0, 0, 0, 65, 101, 0, 0, 0, 0, 0, 127, 43, 0, 0, 0, 0, 0, 84, 60, 0, 0, 0, 1, 66, 92, 2, 0, 0, 0, 0, 0, 85, 46, 0, 0, 14, 88, 74, 0, 0, 0, 0, 0, 0, 0, 84, 113, 65, 96, 116, 65, 7, 0, 0, 0, 0, 0, 0, 0, 32, 111, 127, 83, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // One
    reg signed [7:0] test_data_one [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 127, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 124, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Two
    reg signed [7:0] test_data_two [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 56, 64, 64, 35, 10, 2, 0, 0, 0, 0, 0, 0, 0, 85, 127, 127, 127, 127, 119, 114, 93, 7, 0, 0, 0, 0, 0, 105, 110, 79, 105, 122, 127, 127, 127, 117, 8, 0, 0, 0, 0, 0, 0, 0, 0, 13, 29, 66, 115, 127, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 107, 120, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 82, 126, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 107, 125, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 122, 111, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 121, 127, 89, 43, 41, 9, 1, 0, 0, 0, 0, 0, 0, 10, 100, 124, 127, 127, 127, 120, 88, 0, 0, 0, 0, 0, 0, 0, 0, 19, 34, 64, 47, 12, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Three
    reg signed [7:0] test_data_three [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 19, 64, 63, 63, 23, 0, 0, 0, 0, 0, 0, 0, 28, 109, 123, 127, 126, 126, 115, 9, 0, 0, 0, 0, 0, 0, 14, 70, 48, 33, 42, 123, 116, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 125, 83, 0, 0, 0, 0, 0, 0, 0, 4, 40, 48, 101, 126, 106, 30, 0, 0, 0, 0, 0, 0, 0, 67, 127, 127, 127, 127, 63, 0, 0, 0, 0, 0, 0, 0, 0, 4, 22, 11, 11, 83, 82, 0, 0, 0, 0, 0, 0, 0, 10, 1, 0, 0, 12, 104, 82, 0, 0, 0, 0, 0, 0, 34, 118, 39, 34, 45, 105, 118, 49, 0, 0, 0, 0, 0, 0, 32, 114, 126, 126, 116, 84, 20, 0, 0, 0, 0, 0, 0, 0, 0, 14, 61, 34, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Four
    reg signed [7:0] test_data_four [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 5, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 86, 10, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 27, 103, 0, 0, 0, 0, 22, 107, 0, 0, 0, 0, 0, 0, 59, 77, 0, 0, 0, 0, 41, 90, 0, 0, 0, 0, 2, 34, 120, 42, 0, 0, 0, 0, 40, 108, 54, 66, 87, 95, 93, 58, 127, 5, 0, 0, 0, 0, 0, 39, 46, 46, 20, 0, 0, 35, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Five
    reg signed [7:0] test_data_five [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 95, 127, 127, 103, 0, 0, 0, 0, 0, 0, 0, 0, 40, 119, 95, 71, 56, 32, 0, 0, 0, 0, 0, 0, 64, 48, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 119, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 127, 103, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 56, 119, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 103, 48, 0, 0, 0, 0, 0, 0, 0, 0, 64, 95, 64, 103, 119, 16, 0, 0, 0, 0, 0, 0, 0, 0, 111, 111, 103, 64, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Six
    reg signed [7:0] test_data_six [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 123, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 126, 83, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 119, 97, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 120, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 121, 86, 37, 49, 29, 0, 0, 0, 0, 0, 0, 0, 0, 53, 127, 110, 118, 102, 124, 27, 0, 0, 0, 0, 0, 0, 0, 57, 127, 116, 24, 14, 127, 46, 0, 0, 0, 0, 0, 0, 0, 57, 116, 40, 1, 82, 121, 11, 0, 0, 0, 0, 0, 0, 0, 24, 124, 90, 92, 127, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 96, 98, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Seven
    reg signed [7:0] test_data_seven [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 12, 46, 61, 73, 16, 0, 0, 0, 1, 0, 0, 0, 29, 91, 119, 82, 53, 127, 50, 0, 0, 0, 0, 0, 0, 0, 36, 60, 13, 10, 108, 91, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 108, 96, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 103, 91, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 98, 103, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 98, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Eight
    reg signed [7:0] test_data_eight [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 42, 54, 30, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 127, 111, 108, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 116, 3, 21, 122, 68, 0, 0, 0, 0, 0, 0, 0, 0, 57, 125, 74, 120, 123, 56, 0, 0, 0, 0, 0, 0, 0, 0, 63, 127, 127, 72, 4, 0, 0, 0, 0, 0, 0, 0, 4, 58, 123, 107, 27, 0, 0, 0, 0, 0, 0, 0, 0, 6, 95, 127, 117, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 90, 31, 98, 81, 0, 0, 0, 0, 0, 0, 0, 0, 12, 122, 40, 21, 126, 54, 0, 0, 0, 0, 0, 0, 0, 0, 20, 124, 116, 123, 96, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 64, 55, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    // Nine
    reg signed [7:0] test_data_nine [0:195] = '{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 63, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 81, 110, 77, 127, 27, 0, 0, 0, 0, 0, 0, 0, 23, 113, 34, 1, 68, 101, 1, 0, 0, 0, 0, 0, 0, 0, 58, 52, 0, 17, 117, 65, 0, 0, 0, 0, 0, 0, 0, 0, 59, 118, 92, 104, 127, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 31, 75, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 110, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 104, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 69, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 118, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 30, 0, 0, 0, 0, 0, 0, 0, 0 };

    // test series
    reg signed [7:0] test_data_gen [0:195] = '{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195};

    // Purely combinational select logic
    always @(*) begin
        case(image_no)
            4'b0000     :   image_data_out = test_data_zero;
            4'b0001     :   image_data_out = test_data_one;
            4'b0010     :   image_data_out = test_data_two;
            4'b0011     :   image_data_out = test_data_three;
            4'b0100     :   image_data_out = test_data_four;
            4'b0101     :   image_data_out = test_data_five;
            4'b0110     :   image_data_out = test_data_six;
            4'b0111     :   image_data_out = test_data_seven;
            4'b1000     :   image_data_out = test_data_eight;
            4'b1001     :   image_data_out = test_data_nine;
            default     :   image_data_out = test_data_zero;
        endcase
    end

endmodule
